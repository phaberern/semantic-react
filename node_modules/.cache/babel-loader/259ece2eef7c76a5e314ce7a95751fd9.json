{"ast":null,"code":"import _classCallCheck from \"/Users/PhilHaberern/go/src/github.com/phaberern/semantic-practice/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PhilHaberern/go/src/github.com/phaberern/semantic-practice/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PhilHaberern/go/src/github.com/phaberern/semantic-practice/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PhilHaberern/go/src/github.com/phaberern/semantic-practice/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PhilHaberern/go/src/github.com/phaberern/semantic-practice/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PhilHaberern/go/src/github.com/phaberern/semantic-practice/src/containers/Rule/Rule.js\";\nimport React, { Component } from 'react';\nimport { Container, Header, Divider } from 'semantic-ui-react';\n\nvar Rule =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Rule, _Component);\n\n  function Rule() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Rule);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Rule)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      companyID: 1,\n      rules: [{\n        \"rule1\": \"test rule 1\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Rule, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Rules\"), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Rule;\n}(Component);\n\nexport default Rule;","map":{"version":3,"sources":["/Users/PhilHaberern/go/src/github.com/phaberern/semantic-practice/src/containers/Rule/Rule.js"],"names":["React","Component","Container","Header","Divider","Rule","state","companyID","rules"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,OAA5B,QAA2C,mBAA3C;;IAEMC,I;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAG,CADR;AAEJC,MAAAA,KAAK,EAAE,CACH;AACI,iBAAS;AADb,OADG;AAFH,K;;;;;;6BAQC;AACL,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EAhBcP,S;;AAmBnB,eAAeI,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Header, Divider } from 'semantic-ui-react'\n\nclass Rule extends Component {\n    state = {\n        companyID : 1,\n        rules: [\n            {\n                \"rule1\": \"test rule 1\"\n            }\n        ]\n    }\n    render() {\n        return(\n            <Container>\n                <Header as='h1'>Rules</Header>\n                <Divider />\n            </Container>\n        )\n    }\n}\n\nexport default Rule"]},"metadata":{},"sourceType":"module"}